<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Notification</name>
        <label>Send custom Notification</label>
        <locationX>413</locationX>
        <locationY>3113</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Custom_notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ListRecipientUsersId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Ticket Assigned</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>A new Ticket is assigned to your team</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>set_Already_loop_sous_member</name>
        <label>set Already loop sous member</label>
        <locationX>50</locationX>
        <locationY>2063</locationY>
        <assignmentItems>
            <assignToReference>AlreadyLoopSousMemberGroup</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Get_group_member_by_owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>set_list_Group</name>
        <label>set list Group</label>
        <locationX>424</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>ListIdGroups</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loop_all_member.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_all_member</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>set_list_ID_role</name>
        <label>Set list ID role</label>
        <locationX>270</locationX>
        <locationY>1679</locationY>
        <assignmentItems>
            <assignToReference>listIdRoles</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_each_group.RelatedId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_each_group</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>set_list_ID_users</name>
        <label>set list ID users</label>
        <locationX>688</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>ListIdUsers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>loop_all_member.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loop_all_member</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_recipient_user_id</name>
        <label>Set recipient user id</label>
        <locationX>501</locationX>
        <locationY>2813</locationY>
        <assignmentItems>
            <assignToReference>ListRecipientUsersId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>eachUser.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>eachUser</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_rest_Group_Id</name>
        <label>Set rest Group Id</label>
        <locationX>545</locationX>
        <locationY>323</locationY>
        <assignmentItems>
            <assignToReference>restGroupId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_group_member_by_owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>set_RestOfIdGroups</name>
        <label>set RestOfIdGroups</label>
        <locationX>534</locationX>
        <locationY>1679</locationY>
        <assignmentItems>
            <assignToReference>restGroupId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_each_group.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_each_group</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_variable_to_null</name>
        <label>Set variable to null</label>
        <locationX>545</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>restGroupId</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ListIdGroups</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Has_member</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AlreadyLoopSousGroup</name>
        <label>AlreadyLoopSousGroup</label>
        <locationX>754</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YES</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AlreadyLoopSousMemberGroup</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_user_all_in_member_Group</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_user</name>
        <label>Found user</label>
        <locationX>545</locationX>
        <locationY>2597</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YES_FoundUser</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_user_all_in_member_Group</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>eachUser</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <decisions>
        <name>group_is_related_to_Role</name>
        <label>Group is related to Role</label>
        <locationX>402</locationX>
        <locationY>1571</locationY>
        <defaultConnector>
            <targetReference>set_RestOfIdGroups</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YES_relatedToRole</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_each_group.RelatedId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>set_list_ID_role</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Group_Id_to_get</name>
        <label>Has Group Id to get</label>
        <locationX>182</locationX>
        <locationY>1955</locationY>
        <defaultConnector>
            <targetReference>Get_user_all_in_member_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YES_HasGroupIdToGet</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>restGroupId</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>set_Already_loop_sous_member</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_member</name>
        <label>Group member Has member</label>
        <locationX>545</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>AlreadyLoopSousGroup</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YES_hasMember</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_group_member_by_owner</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loop_all_member</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <decisions>
        <name>member_is_user</name>
        <label>member is user</label>
        <locationX>556</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>set_list_ID_users</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>YES</defaultConnectorLabel>
        <rules>
            <name>NOT_memberIsUser</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>loop_all_member.UserOrGroupId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>set_list_Group</targetReference>
            </connector>
            <label>NO</label>
        </rules>
    </decisions>
    <decisions>
        <name>sous_group</name>
        <label>Has group in member group</label>
        <locationX>336</locationX>
        <locationY>1247</locationY>
        <defaultConnector>
            <targetReference>Get_user_all_in_member_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YES_HasSousGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ListIdGroups</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Group_in_member_Group</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Case Notify Queue Owner {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Notify Queue Owner</label>
    <loops>
        <name>eachUser</name>
        <label>EachUser</label>
        <locationX>413</locationX>
        <locationY>2705</locationY>
        <collectionReference>Get_user_all_in_member_Group</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Set_recipient_user_id</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_Custom_notification</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>loop_all_member</name>
        <label>loop all member</label>
        <locationX>336</locationX>
        <locationY>755</locationY>
        <collectionReference>Get_group_member_by_owner</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>member_is_user</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>sous_group</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_each_group</name>
        <label>Loop each group</label>
        <locationX>182</locationX>
        <locationY>1463</locationY>
        <collectionReference>Get_Group_in_member_Group</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>group_is_related_to_Role</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Has_Group_Id_to_get</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Custom_notification</name>
        <label>Get Custom notification</label>
        <locationX>413</locationX>
        <locationY>3005</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Notification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NouvelleAssignationTicket</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_in_member_Group</name>
        <label>Get Group in member Group</label>
        <locationX>182</locationX>
        <locationY>1355</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_each_group</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>ListIdGroups</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>RelatedId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_group_member_by_owner</name>
        <label>Get group member by owner</label>
        <locationX>545</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_variable_to_null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>restGroupId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>UserOrGroupId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_user_all_in_member_Group</name>
        <label>Get user all in member Group</label>
        <locationX>545</locationX>
        <locationY>2489</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_user</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>ListIdUsers</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserRoleId</field>
            <operator>In</operator>
            <value>
                <elementReference>listIdRoles</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>419</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Set_rest_Group_Id</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OwnerId</field>
            <operator>StartsWith</operator>
            <value>
                <stringValue>00G</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AlreadyLoopSousMemberGroup</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>GroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ListIdGroups</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>listIdRoles</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ListIdUsers</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ListRecipientUsersId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>restGroupId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
